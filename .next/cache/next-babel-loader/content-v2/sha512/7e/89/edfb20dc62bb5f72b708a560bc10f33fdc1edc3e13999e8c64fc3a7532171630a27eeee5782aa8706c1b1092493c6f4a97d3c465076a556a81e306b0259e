{"ast":null,"code":"import mongoose from 'mongoose';\nimport connectToMongo from '../../database/connection';\nimport UserSchema from '../../database/models/UserModel';\nconnectToMongo();\nexport default (async (req, res) => {\n  const {\n    method,\n    body\n  } = req;\n  let User;\n\n  try {\n    User = mongoose.model('User');\n  } catch {\n    User = mongoose.model('User', UserSchema);\n  }\n\n  switch (method) {\n    case 'GET':\n      try {\n        const users = await User.find();\n        res.status(201).json({\n          success: true,\n          data: users\n        });\n      } catch (err) {\n        res.status(500).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const newUser = await new User(body);\n        newUser.save();\n        res.status(201).json({\n          success: true,\n          data: newUser\n        });\n      } catch (err) {\n        res.status(500).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'DELETE':\n      try {\n        await User.deleteMany();\n        res.status(201).json({\n          success: true,\n          data: {}\n        });\n      } catch (err) {\n        res.status(500).json({\n          success: false\n        });\n      }\n\n  }\n});","map":{"version":3,"sources":["/home/gustavo/Documentos/Github/nextjs-user-list/src/pages/api/index.tsx"],"names":["mongoose","connectToMongo","UserSchema","req","res","method","body","User","model","users","find","status","json","success","data","err","newUser","save","deleteMany"],"mappings":"AACA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEAD,cAAc;AAEd,gBAAe,OAAOE,GAAP,EAA4BC,GAA5B,KAAqD;AAChE,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBH,GAAzB;AAEA,MAAII,IAAJ;;AAEA,MAAI;AACAA,IAAAA,IAAI,GAAGP,QAAQ,CAACQ,KAAT,CAAe,MAAf,CAAP;AACH,GAFD,CAEE,MAAM;AACJD,IAAAA,IAAI,GAAGP,QAAQ,CAACQ,KAAT,CAAe,MAAf,EAAuBN,UAAvB,CAAP;AACH;;AAED,UAAQG,MAAR;AACI,SAAK,KAAL;AACI,UAAI;AACA,cAAMI,KAAK,GAAG,MAAMF,IAAI,CAACG,IAAL,EAApB;AACAN,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEL;AAAvB,SAArB;AACH,OAHD,CAGE,OAAOM,GAAP,EAAY;AACVX,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACH;;AACD;;AAEJ,SAAK,MAAL;AACI,UAAI;AACA,cAAMG,OAAO,GAAG,MAAM,IAAIT,IAAJ,CAASD,IAAT,CAAtB;AAEAU,QAAAA,OAAO,CAACC,IAAR;AAEAb,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEE;AAAvB,SAArB;AACH,OAND,CAME,OAAOD,GAAP,EAAY;AACVX,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACH;;AACD;;AAEJ,SAAK,QAAL;AACI,UAAI;AACA,cAAMN,IAAI,CAACW,UAAL,EAAN;AAEAd,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAE;AAAvB,SAArB;AACH,OAJD,CAIE,OAAOC,GAAP,EAAY;AACVX,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACH;;AA7BT;AA+BH,CA1CD","sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\nimport mongoose from 'mongoose';\n\nimport connectToMongo from '../../database/connection';\nimport UserSchema from '../../database/models/UserModel';\n\nconnectToMongo();\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n    const { method, body } = req;\n\n    let User;\n\n    try {\n        User = mongoose.model('User');\n    } catch {\n        User = mongoose.model('User', UserSchema);\n    }\n\n    switch (method) {\n        case 'GET':\n            try {\n                const users = await User.find();\n                res.status(201).json({ success: true, data: users })\n            } catch (err) {\n                res.status(500).json({ success: false })\n            }\n            break;\n        \n        case 'POST':\n            try {\n                const newUser = await new User(body);\n\n                newUser.save();\n\n                res.status(201).json({ success: true, data: newUser })\n            } catch (err) {\n                res.status(500).json({ success: false })\n            }\n            break;\n\n        case 'DELETE':\n            try {\n                await User.deleteMany();\n\n                res.status(201).json({ success: true, data: {} })\n            } catch (err) {\n                res.status(500).json({ success: false })\n            }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}