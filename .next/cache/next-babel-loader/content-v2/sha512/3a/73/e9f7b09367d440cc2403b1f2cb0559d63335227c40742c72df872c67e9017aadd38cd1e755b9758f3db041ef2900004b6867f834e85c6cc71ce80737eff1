{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gustavo/Documentos/Github/nextjs-user-list/src/pages/index.tsx\";\nimport { useEffect, useState } from 'react';\nimport GlobalStyles from '../styles/globalStyles';\nimport { Container, List, Button, DeleteAllButton } from '../styles/index';\nimport Card from '../components/Card';\nimport Header from '../components/Header';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport api from '../services/api';\nconst ADMIN_IP = process.env.ADMIN_IP;\n\nconst Index = props => {\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n  const {\n    0: isAdmin,\n    1: setIsAdmin\n  } = useState(false);\n\n  const handleDeleteAll = async () => {\n    await api.delete('');\n  };\n\n  useEffect(() => {\n    setUsers(props.data);\n\n    if (props.ip === ADMIN_IP) {\n      setIsAdmin(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/create\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Add Your User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: users.map((user, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            isAdmin: isAdmin,\n            name: user.name,\n            date: user.date,\n            id: user['_id']\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(DeleteAllButton, {\n      onClick: handleDeleteAll,\n      children: \"Delete All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const response = api.get('');\n  const data = (await response).data.data;\n  const ipResponse = await fetch('http://ip-api.com/json/?fields=query');\n  const {\n    query\n  } = await ipResponse.json();\n  return {\n    props: {\n      data,\n      ip: query\n    },\n    revalidate: 10\n  };\n}\nexport default Index;","map":{"version":3,"sources":["/home/gustavo/Documentos/Github/nextjs-user-list/src/pages/index.tsx"],"names":["useEffect","useState","GlobalStyles","Container","List","Button","DeleteAllButton","Card","Header","Link","Head","api","ADMIN_IP","process","env","Index","props","users","setUsers","isAdmin","setIsAdmin","handleDeleteAll","delete","data","ip","map","user","index","name","date","getStaticProps","response","get","ipResponse","fetch","query","json","revalidate"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,eAAlC,QAAyD,iBAAzD;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYF,QAA7B;;AAEA,MAAMG,KAAK,GAAIC,KAAD,IAAgB;AAE1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAA,OAACkB,OAAD;AAAA,OAAUC;AAAV,MAAwBnB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMoB,eAAe,GAAG,YAAY;AAChC,UAAMV,GAAG,CAACW,MAAJ,CAAW,EAAX,CAAN;AACH,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACF,KAAK,CAACO,IAAP,CAAR;;AAEA,QAAIP,KAAK,CAACQ,EAAN,KAAaZ,QAAjB,EAA2B;AACvBQ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GANQ,EAMN,EANM,CAAT;AAQA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAaI;AAAA,6BACI,QAAC,IAAD;AAAA,kBAEQH,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACvB,8BACI,QAAC,IAAD;AAEI,YAAA,OAAO,EAAER,OAFb;AAGI,YAAA,IAAI,EAAEO,IAAI,CAACE,IAHf;AAII,YAAA,IAAI,EAAEF,IAAI,CAACG,IAJf;AAKI,YAAA,EAAE,EAAEH,IAAI,CAAC,KAAD;AALZ,aACSC,KADT;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,SAVD;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ,EAgCQR,OAAO,iBACH,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEE,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCZ,eAuCI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CA7DD;;AA+DA,OAAO,eAAeS,cAAf,GAAgC;AAEnC,QAAMC,QAAQ,GAAGpB,GAAG,CAACqB,GAAJ,CAAQ,EAAR,CAAjB;AACA,QAAMT,IAAI,GAAG,CAAC,MAAMQ,QAAP,EAAiBR,IAAjB,CAAsBA,IAAnC;AAEA,QAAMU,UAAU,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA9B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAY,MAAMF,UAAU,CAACG,IAAX,EAAxB;AAEA,SAAO;AACHpB,IAAAA,KAAK,EAAE;AACHO,MAAAA,IADG;AAEHC,MAAAA,EAAE,EAAEW;AAFD,KADJ;AAKHE,IAAAA,UAAU,EAAE;AALT,GAAP;AAOH;AAED,eAAetB,KAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport GlobalStyles from '../styles/globalStyles';\nimport { Container, List, Button, DeleteAllButton } from '../styles/index';\nimport Card from '../components/Card';\nimport Header from '../components/Header';\n\nimport Link from 'next/link';\nimport Head from 'next/head';\n\nimport api from '../services/api';\nconst ADMIN_IP = process.env.ADMIN_IP;\n\nconst Index = (props: any) => {\n\n    const [users, setUsers] = useState([]);\n\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const handleDeleteAll = async () => {\n        await api.delete('');\n    }\n\n    useEffect(() => {\n        setUsers(props.data);\n\n        if (props.ip === ADMIN_IP) {\n            setIsAdmin(true);\n        }\n    }, [])\n\n    return (\n        <Container>\n            <Head>\n                <title>User List</title>\n            </Head>\n\n            <Header>\n                <Link href=\"/create\">\n                    <Button>\n                        Add Your User\n                    </Button>\n                </Link>\n            </Header>\n\n            <div>\n                <List>\n                    {\n                        users.map((user, index) => {\n                            return (\n                                <Card\n                                    key={index}\n                                    isAdmin={isAdmin}\n                                    name={user.name}\n                                    date={user.date}\n                                    id={user['_id']}\n                                />\n                            )\n                        })\n                    }\n                </List>\n            </div>\n\n            {\n                isAdmin && (\n                    <DeleteAllButton onClick={handleDeleteAll}>\n                        Delete All\n                    </DeleteAllButton>\n                )\n            }\n\n            <GlobalStyles />\n        </Container>\n    );\n}\n\nexport async function getStaticProps() {\n\n    const response = api.get('');\n    const data = (await response).data.data;\n\n    const ipResponse = await fetch('http://ip-api.com/json/?fields=query');\n    const { query } = await ipResponse.json();\n\n    return {\n        props: {\n            data,\n            ip: query\n        },\n        revalidate: 10\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}